name: reusable-ci
on:
  workflow_call:
    inputs:
      working-directory: { required: true, type: string }
      node-version: { type: string, default: '20' }
      run-tests: { type: boolean, default: true }
      build-docker: { type: boolean, default: false }
      image-name: { type: string, default: '' }

jobs:
  ci:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.working-directory }}
      cancel-in-progress: true
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm
          cache-dependency-path: ${{ inputs.working-directory }}/package-lock.json
      - name: Install
        run: npm ci
        working-directory: ${{ inputs.working-directory }}
      - name: Lint
        run: npm run lint --if-present
        working-directory: ${{ inputs.working-directory }}
      - name: Test
        if: inputs.run-tests == true
        run: npm test --if-present -- --ci
        working-directory: ${{ inputs.working-directory }}

  docker:
    if: inputs.build-docker == true
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE_NAME: ${{ inputs.image-name }}
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login (ACR)
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build & (conditionally) push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
