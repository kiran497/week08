name: reusable-ci

on:
  workflow_call:
    inputs:
      working-directory:
        description: Service directory
        required: true
        type: string
      node-version:
        type: string
        default: '20'
      run-tests:
        type: boolean
        default: true
      build-docker:
        type: boolean
        default: false
      image-name:
        type: string
        default: ''

jobs:
  ci:
    name: CI - ${{ inputs.working-directory }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.working-directory }}
      cancel-in-progress: true
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package.json
        id: detect
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f package.json ]; then
            echo "has_pkg=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_pkg=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node
        if: steps.detect.outputs.has_pkg == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm
          cache-dependency-path: ${{ inputs.working-directory }}/package-lock.json

      - name: Install
        if: steps.detect.outputs.has_pkg == 'true'
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint
        if: steps.detect.outputs.has_pkg == 'true'
        working-directory: ${{ inputs.working-directory }}
        run: npm run lint --if-present

      - name: Test
        if: steps.detect.outputs.has_pkg == 'true' && inputs.run-tests
        working-directory: ${{ inputs.working-directory }}
        run: npm test --if-present -- --ci

      - name: Skip note (no package.json)
        if: steps.detect.outputs.has_pkg != 'true'
        run: echo "No package.json in ${{ inputs.working-directory }} â€“ skipping Node steps."

  docker:
    name: Docker build/publish - ${{ inputs.image-name }}
    if: inputs.build-docker == true
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Docker Login (skip on PRs)
        if: github.event_name != 'pull_request'
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username:     ${{ secrets.ACR_USERNAME }}
          password:     ${{ secrets.ACR_PASSWORD }}

      # Make a Docker-safe tag from branch name (slashes/spaces -> dashes)
      - name: Compute safe image tag
        id: tag
        run: |
          ref="${GITHUB_REF_NAME}"
          safe="${ref//\//-}"
          safe="${safe// /-}"
          echo "safe=$safe" >> "$GITHUB_OUTPUT"

      - name: Build (push off on PRs)
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.working-directory }}
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}/${{ inputs.image-name }}:${{ steps.tag.outputs.safe }}
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}/${{ inputs.image-name }}:sha-${{ github.sha }}
